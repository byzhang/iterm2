#summary New shell integration features in iTerm2

= Introduction =

Version 3 of iTerm2 will include deeper integration with the unix shell. This page explains how it works and how to use it. These builds are currently available through the nightly builds at http://iterm2.com/nightly/latest.


= Details =

Shell integration works with custom escape codes.

==Locate command prompts==

===Marks===
You can use Cmd-Opt-{{{[}}} and ] to navigate "marks" in your terminal history (e.g., to find previous shell prompts).  Marks can be set with Shell>Set Mark, but more usefully, they can be set with an escape code:

{{{\033]50;SetMark\007}}}

The mark is indicated visually with a small blue triangle in the left margin.
http://www.iterm2.com/images/mark.png

If you kick off a long-running command, *Edit>Alert on next mark* will post a notification (Growl or Notification Center) and bounce the dock icon when the command finishes.

===Notes===
A mark with an annotation attached is called a note. You can add a note with:

{{{\033]50;AddNote=value\007}}}

or

{{{\033]50;AddHiddenNote=value\007}}}

_value_ is one of:
  * _string_: A region beginning at the current cursor position and extending to the end of the line will be annotated with _string_.
  * _string|length_: A region beginning at the current cursor position and extending _length_ characters will be annotated with _string_.
  * _string|length|x|y_: A region beginning at _x_, _y_ and extending _length_ characters will be annotated with _string_. _x_ and _y_ are 0-based.

_AddNote_ adds a note with a visible annotation, while _AddHiddenNote_ collapses the annotation automatically. Right-clicking on the annotation and selecting "Show Notes" will reveal the annotations. All annotations can be toggled with Edit>Show/Hide Notes.

Notes can also be added manually by selecting a region of text and choosing *Annotate selection* in the context menu:
http://iterm2.com/images/notes.png

==Open local files==

You can Cmd-Click on a filename in the terminal to open it. In order for this to work, iTerm2 needs to know your working directory at all times. Setting the window title via an escape code will fetch it from the local host, but you can also get set it with the following escape code:

{{{\033]50;CurrentDir=$PWD\007}}}

The reason why this method is better will be come clear in the context of the next code.

==SCP remote files==

If iTerm2 knows the name of the remote host you're connected to as well as your current directory on that host, it can download and upload files via scp. Use the following escape code:

{{{\033]50;RemoteHost=$USER@$HOST\007}}}

When this is present, you can right click on a filename and select "Download with scp from $HOST". You can also drag files from finder into iTerm2 and it will upload them to the directory you were in on the line you dropped the file on.

Once an upload or download is started, "Uploads" and "Downloads" are added to the menu bar where you may track progress of the transfers, stop them, open downloaded files, and reveal them in finder.

===A note on SCP===
iTerm2 links in libssh2, and does not shell out to scp. It respects /etc/known_hosts and ~/.ssh/known_hosts, and will update them appropriately. Host fingerprints are verified. Password, keyboard-interactive, and public-key authentication (using ~/.ssh/id_rsa, encrypted with an optional passphrase) are supported. Previously unknown hosts will be added to ~/.ssh/known_hosts after a successful authentication.

This code is relatively new. If you are in a high-security environment, please keep this in mind.

=Putting it all together=

In this section, complete code will be provided for each shell to take advantage of the integration. The feature is not specific to any single shell, and contributions for missing shells are welcomed.

==tcsh==
Place the following in your .tcshrc:

{{{alias precmd 'printf "\033]50;SetMark\007\033]50;RemoteHost='$USER'@'`hostname -f`'\007\033]50;CurrentDir=$PWD\007"'}}}

==bash==
Place the following in your .bashrc:

{{{PROMPT_COMMAND='printf "\033]50;SetMark\007\033]50;RemoteHost='$USER'@'`hostname -f`'\007\033]50;CurrentDir=$PWD\007"'}}}